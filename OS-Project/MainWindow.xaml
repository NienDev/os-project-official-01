<Window x:Class="OS_Project.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OS_Project"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1200"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"   
        
        Loaded="Window_Loaded"
        
        xmlns:viewmodels="clr-namespace:OS_Project.ViewModels"
        xmlns:views="clr-namespace:OS_Project.Views"
        
    >
    <Window.Resources>
        <DataTemplate x:Name="TreeView" DataType="{x:Type viewmodels:TreeViewViewModel}">
            <views:TreeView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="Member" DataType="{x:Type viewmodels:MemberViewModel}">
            <views:Members DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="About" DataType="{x:Type viewmodels:AboutViewModel}">
            <views:About DataContext="{Binding}"/>
        </DataTemplate>

        <!-- title icons styles -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="RadioButton" x:Key="SideBarBtn">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}" >
                            <Border x:Name="SideIconBorder" Height="80" Width="80" CornerRadius="8">
                                <ContentPresenter x:Name="SideBarIconPresenter" VerticalAlignment="Center"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="SideIconBorder" Property="Background" Value="#D7E5FA"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="SideIconBorder" Property="Background" Value="#D7E5FA"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <Style x:Key="maxbtn" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsMaximized}" Value="True">
                                <Setter TargetName="contentPresenter" Property="Content">
                                    <Setter.Value>
                                        <fa:FontAwesome Foreground="White"  DockPanel.Dock="Right" Icon="WindowRestore" FontSize="24"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMaximized}" Value="False">
                                <Setter TargetName="contentPresenter" Property="Content">
                                    <Setter.Value>
                                        <fa:FontAwesome Foreground="White"  DockPanel.Dock="Right" Icon="WindowMaximize" FontSize="24"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
             
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>



    </Window.Resources>


    <Border CornerRadius="8 8 0 0 " VerticalAlignment="Top" Background="#091F4B">
        <StackPanel Height="800" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
            <Grid Height="86">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Column="0" VerticalAlignment="Center" Margin="20 0 0 0">
                    <TextBlock VerticalAlignment="Center" FontSize="20" Foreground="White" FontWeight="Bold" FontFamily="Poppins">NNP's Product</TextBlock>
                    <TextBlock VerticalAlignment="center" Margin="20 0 0 0" FontSize="16" Foreground="White" FontWeight="Light" FontFamily="Poppins">USB Reader</TextBlock>
                </DockPanel>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="1">
                    <Button Command="{Binding MinimizeWindowCommand}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40" Background="Transparent" BorderBrush="Transparent">
                        <fa:FontAwesome Foreground="White"  DockPanel.Dock="Right" Icon="WindowMinimize" FontSize="24"/>
                    </Button>

                    <Button Command="{Binding MaximizeWindowCommand}" Style="{DynamicResource maxbtn}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40" Background="Transparent" BorderBrush="Transparent">
                    </Button>


                    <Button Command="{Binding CloseWindowCommand}" Margin="0 0 10 0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40" Width="40" Background="Transparent" BorderBrush="Transparent">
                        <fa:FontAwesome Margin="4" Foreground="White" DockPanel.Dock="Right" Icon="Close" FontSize="24"/>
                    </Button>

                  
                </StackPanel>
            </Grid>

            <Border CornerRadius="0 0 8 8" Background="#fff" HorizontalAlignment="Left">
                <Grid Height="714" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="96"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <!--<ColumnDefinition Width="400"></ColumnDefinition>-->
                    </Grid.ColumnDefinitions>

                    <Border CornerRadius="0 0 0 12" Grid.Column="0" BorderThickness="2" BorderBrush="#D7E5FA" Background="#F8FAFE">
                        <StackPanel x:Name="SideBarContainer">
                            <RadioButton x:Name="DefaultBtn"  Style="{StaticResource SideBarBtn}"  Height="80" Width="80" Margin="0 24 0 0" Click="ShowHome_Click">
                                <fa:FontAwesome Icon="Home" FontSize="40" Foreground="#061A49"/>
                            </RadioButton>
                            <RadioButton Style="{StaticResource SideBarBtn}"  Height="80" Width="80" Margin="0 24 0 24" Click="ShowAbout_Click">
                                <fa:FontAwesome Icon="InfoCircle" FontSize="40" Foreground="#061A49"/>
                            </RadioButton>
                            <RadioButton Style="{StaticResource SideBarBtn}"   Height="80" Width="80" Click="ShowMembers_Click" >
                                <fa:FontAwesome Icon="Group" FontSize="40" Foreground="#061A49"/>
                            </RadioButton>
                        </StackPanel>
                    </Border>
                    <ContentControl x:Name="CC" Grid.Column="1" />
                </Grid>
            </Border>

        </StackPanel>
    </Border>
</Window>
